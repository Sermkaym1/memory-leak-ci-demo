"""
–î–µ–º–æ-–≤–µ—Ä—Å–∏—è —Ç–µ—Å—Ç–æ–≤ –Ω–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ (30 —Å–µ–∫—É–Ω–¥) –¥–ª—è –ø–æ–∫–∞–∑–∞ CI/CD
"""
import pytest
import time
import allure
from tests.utils.enhanced_monitor import EnhancedMemoryMonitor
from tests.utils.load_generator import LoadGenerator  
from tests.utils.report_builder import ReportBuilder


@allure.epic("Demo Memory Leak Detection")
@allure.feature("Quick Demo Tests")
class TestDemoMemoryLeak:
    """–î–µ–º–æ-—Ç–µ—Å—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∫–∞–∑–∞ CI/CD"""
    
    @allure.story("App WITH Memory Leak - 30sec Demo")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_demo_app_with_leak_30sec(self, app_with_leak_container):
        """üö® –î–µ–º–æ: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –° —É—Ç–µ—á–∫–æ–π –ø–∞–º—è—Ç–∏ (30 —Å–µ–∫)"""
        
        container = app_with_leak_container
        duration = 30  # –í—Å–µ–≥–æ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–µ–º–æ
        base_url = "http://localhost:5000"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        monitor = EnhancedMemoryMonitor(container)
        load_gen = LoadGenerator(base_url)
        report = ReportBuilder()
        
        with allure.step("üéØ –î–ï–ú–û: –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"):
            initial_memory = monitor.get_detailed_metrics()
            allure.attach(
                f"üèÅ –ù–∞—á–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å:\n"
                f"RSS: {initial_memory.rss_mb:.1f} MB\n"
                f"VMS: {initial_memory.vms_mb:.1f} MB",
                name="–ù–∞—á–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å",
                attachment_type=allure.attachment_type.TEXT
            )
        
        with allure.step(f"‚ö° –î–ï–ú–û: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ ({duration}—Å)"):
            memory_data = []
            start_time = time.time()
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞–≥—Ä—É–∑–∫–∏
            load_gen.start(
                endpoints=['/api/stress', '/api/cache'],  # –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
                rps=10,  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
                duration=duration
            )
            
            # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ (6 —Ç–æ—á–µ–∫ –∑–∞ 30 —Å–µ–∫)
            while time.time() - start_time < duration:
                elapsed = time.time() - start_time
                mem = monitor.get_detailed_metrics()
                
                memory_data.append({
                    'time': elapsed,
                    'rss_mb': mem.rss_mb,
                    'vms_mb': mem.vms_mb,
                    'percent': mem.memory_percent
                })
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –¥–µ–º–æ
                progress = (elapsed / duration) * 100
                print(f"üéØ DEMO [{progress:5.1f}%] "
                      f"‚è±Ô∏è {int(elapsed)}—Å/{duration}—Å "
                      f"üìà RSS: {mem.rss_mb:6.1f} MB")
                
                time.sleep(5)  # –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
            
            load_gen.stop()
    
        with allure.step("üìä –î–ï–ú–û: –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"):
            final_memory = monitor.get_detailed_metrics()
            memory_growth = final_memory.rss_mb - initial_memory.rss_mb
            
            # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
            chart_path = report.create_memory_chart(
                memory_data,
                title="üö® DEMO: Memory Leak Detection (30 sec)",
                filename="demo_memory_leak_30sec.png"
            )
            
            if chart_path:
                allure.attach.file(chart_path, name="üìà Demo –ì—Ä–∞—Ñ–∏–∫", attachment_type=allure.attachment_type.PNG)
            
            # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
            allure.attach(
                f"üìä –î–ï–ú–û –†–ï–ó–£–õ–¨–¢–ê–¢–´:\n"
                f"üèÅ –ù–∞—á–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å: {initial_memory.rss_mb:.1f} MB\n"
                f"üèÅ –ö–æ–Ω–µ—á–Ω–∞—è –ø–∞–º—è—Ç—å: {final_memory.rss_mb:.1f} MB\n" 
                f"üìà –†–æ—Å—Ç –ø–∞–º—è—Ç–∏: +{memory_growth:.1f} MB\n"
                f"‚è±Ô∏è –í—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {duration}—Å\n"
                f"üìè –¢–æ—á–µ–∫ –∏–∑–º–µ—Ä–µ–Ω–∏–π: {len(memory_data)}",
                name="üìä –ê–Ω–∞–ª–∏–∑",
                attachment_type=allure.attachment_type.TEXT
            )
            
            # –í–µ—Ä–¥–∏–∫—Ç –¥–ª—è –¥–µ–º–æ
            if memory_growth > 2.0:  # –ü–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ
                verdict = "üö® –£–¢–ï–ß–ö–ê –ü–ê–ú–Ø–¢–ò –û–ë–ù–ê–†–£–ñ–ï–ù–ê! ‚ö†Ô∏è"
                status = "–ö–†–ò–¢–ò–ß–ù–û"
            elif memory_growth > 1.0:
                verdict = "‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–µ–Ω–∏–µ –Ω–∞ —É—Ç–µ—á–∫—É –ø–∞–º—è—Ç–∏"
                status = "–í–ù–ò–ú–ê–ù–ò–ï" 
            else:
                verdict = "‚úÖ –£—Ç–µ—á–∫–∞ –ø–∞–º—è—Ç–∏ –ù–ï –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞"
                status = "–û–ö"
                
            allure.attach(
                f"üéØ –í–ï–†–î–ò–ö–¢ –î–ï–ú–û: {verdict}\n"
                f"üìä –°—Ç–∞—Ç—É—Å: {status}\n"
                f"üìà –†–æ—Å—Ç: +{memory_growth:.1f} MB –∑–∞ {duration}—Å",
                name="üèÅ –ò—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç",
                attachment_type=allure.attachment_type.TEXT
            )
            
            print(f"\nüéØ DEMO RESULTS:")
            print(f"üìä Memory Growth: +{memory_growth:.1f} MB")
            print(f"üèÅ Verdict: {verdict}")
            print("="*60)

    @allure.story("App WITHOUT Memory Leak - 30sec Demo")  
    @allure.severity(allure.severity_level.NORMAL)
    def test_demo_app_without_leak_30sec(self, app_without_leak_container):
        """‚úÖ –î–µ–º–æ: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë–ï–ó —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏ (30 —Å–µ–∫)"""
        
        container = app_without_leak_container
        duration = 30
        base_url = "http://localhost:5001"
        
        monitor = EnhancedMemoryMonitor(container)
        load_gen = LoadGenerator(base_url)
        report = ReportBuilder()
        
        with allure.step("üéØ –î–ï–ú–û: –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ë–ï–ó —É—Ç–µ—á–∫–∏)"):
            initial_memory = monitor.get_detailed_metrics()
            allure.attach(
                f"üèÅ –ù–∞—á–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å:\n"
                f"RSS: {initial_memory.rss_mb:.1f} MB\n"
                f"VMS: {initial_memory.vms_mb:.1f} MB",
                name="–ù–∞—á–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å",
                attachment_type=allure.attachment_type.TEXT
            )
        
        with allure.step(f"‚ö° –î–ï–ú–û: –ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –∑–¥–æ—Ä–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ({duration}—Å)"):
            memory_data = []
            start_time = time.time()
            
            load_gen.start(
                endpoints=['/api/stress', '/api/cache'],
                rps=10,
                duration=duration
            )
            
            while time.time() - start_time < duration:
                elapsed = time.time() - start_time
                mem = monitor.get_detailed_metrics()
                
                memory_data.append({
                    'time': elapsed,
                    'rss_mb': mem.rss_mb,
                    'vms_mb': mem.vms_mb,
                    'percent': mem.memory_percent
                })
                
                progress = (elapsed / duration) * 100
                print(f"‚úÖ HEALTHY [{progress:5.1f}%] "
                      f"‚è±Ô∏è {int(elapsed)}—Å/{duration}—Å "
                      f"üìà RSS: {mem.rss_mb:6.1f} MB")
                
                time.sleep(5)
            
            load_gen.stop()
    
        with allure.step("üìä –î–ï–ú–û: –ê–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"):
            final_memory = monitor.get_detailed_metrics()
            memory_growth = final_memory.rss_mb - initial_memory.rss_mb
            
            chart_path = report.create_memory_chart(
                memory_data,
                title="‚úÖ DEMO: Healthy App - No Memory Leak (30 sec)",
                filename="demo_healthy_app_30sec.png"
            )
            
            if chart_path:
                allure.attach.file(chart_path, name="üìà Healthy –ì—Ä–∞—Ñ–∏–∫", attachment_type=allure.attachment_type.PNG)
            
            verdict = "‚úÖ –ó–î–û–†–û–í–û–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï - —É—Ç–µ—á–µ–∫ –Ω–µ—Ç!" if abs(memory_growth) < 1.0 else "‚ö†Ô∏è –ù–µ–±–æ–ª—å—à–æ–π —Ä–æ—Å—Ç –ø–∞–º—è—Ç–∏"
            
            allure.attach(
                f"üéØ –î–ï–ú–û –í–ï–†–î–ò–ö–¢: {verdict}\n"
                f"üìà –†–æ—Å—Ç: {memory_growth:+.1f} MB –∑–∞ {duration}—Å\n"
                f"üìä –°—Ç–∞—Ç—É—Å: {'–û–ö' if abs(memory_growth) < 1.0 else '–í–ù–ò–ú–ê–ù–ò–ï'}",
                name="üèÅ –ó–¥–æ—Ä–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                attachment_type=allure.attachment_type.TEXT
            )
            
            print(f"\n‚úÖ HEALTHY APP RESULTS:")
            print(f"üìä Memory Growth: {memory_growth:+.1f} MB")
            print(f"üèÅ Verdict: {verdict}")
            print("="*60)