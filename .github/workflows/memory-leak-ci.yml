name: üîç Memory Leak Detection CI

on:
  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ push –≤ main –∏ PR
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  
  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
  workflow_dispatch:
    inputs:
      test_type:
        description: '–¢–∏–ø —Ç–µ—Å—Ç–æ–≤'
        required: true
        default: 'quick'
        type: choice
        options:
          - quick
          - full
          - performance
  
  # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –∫–∞–∂–¥—É—é –Ω–æ—á—å –≤ 2:00 UTC
  schedule:
    - cron: '0 2 * * *'

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  ALLURE_RESULTS_DIR: tests/allure-results

jobs:
  # ==========================================
  # JOB 1: –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã (–≤—Å–µ–≥–¥–∞)
  # ==========================================
  quick-tests:
    name: ‚ö° –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã (5 –º–∏–Ω)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: üê≥ Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
      run: |
        echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
        docker-compose build --parallel
        echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose up -d
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏..."
        sleep 30
        docker-compose ps
        
    - name: ‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤
      run: |
        echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —É—Ç–µ—á–µ–∫..."
        pytest tests/test_quick_demo.py -v -s \
          --alluredir=$ALLURE_RESULTS_DIR \
          --junitxml=quick-test-results.xml
          
    - name: üìä Upload Allure —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results-quick
        path: ${{ env.ALLURE_RESULTS_DIR }}/
        retention-days: 7
        
    - name: üìã –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Quick Tests Results
        path: quick-test-results.xml
        reporter: java-junit
        
    - name: üßπ –û—á–∏—Å—Ç–∫–∞
      if: always()
      run: docker-compose down -v

  # ==========================================
  # JOB 2: –ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã (—Ç–æ–ª—å–∫–æ main)
  # ==========================================
  full-tests:
    name: üß™ –ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã (15 –º–∏–Ω)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_type == 'full')
    needs: quick-tests
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: üê≥ Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
      run: |
        docker-compose build --parallel
        docker-compose up -d
        sleep 60  # –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ–ª–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        
    - name: üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
      run: |
        echo "üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ü–û–õ–ù–´–ï —Ç–µ—Å—Ç—ã –Ω–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏..."
        pytest tests/test_memory_leak.py -v -s \
          --alluredir=$ALLURE_RESULTS_DIR \
          --junitxml=full-test-results.xml
          
    - name: üìä Upload Allure —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results-full
        path: ${{ env.ALLURE_RESULTS_DIR }}/
        retention-days: 30
        
    - name: üìã –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Full Tests Results
        path: full-test-results.xml
        reporter: java-junit
        
    - name: üßπ –û—á–∏—Å—Ç–∫–∞
      if: always()
      run: docker-compose down -v

  # ==========================================
  # JOB 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–∞
  # ==========================================
  allure-report:
    name: üìä Allure –æ—Ç—á–µ—Ç
    runs-on: ubuntu-latest
    if: always()
    needs: [quick-tests, full-tests]
    
    steps:
    - name: üì• Download Allure —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      uses: actions/download-artifact@v3
      with:
        path: allure-results
        
    - name: üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–∞
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history
        
    - name: üöÄ Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-history
        destination_dir: allure-report

  # ==========================================
  # JOB 4: –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  # ==========================================
  performance-tests:
    name: ‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_type == 'performance'
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
      run: |
        docker-compose build --parallel
        docker-compose up -d
        sleep 30
        
    - name: ‚ö° Apache Bench –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      run: |
        sudo apt-get update && sudo apt-get install -y apache2-utils
        
        echo "üî• –ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —Ç–µ—Å—Ç: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –° —É—Ç–µ—á–∫–æ–π"
        ab -n 1000 -c 10 -g leak-app.tsv http://localhost:5000/api/stress > leak-app-results.txt
        
        echo "üî• –ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —Ç–µ—Å—Ç: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë–ï–ó —É—Ç–µ—á–∫–∏"  
        ab -n 1000 -c 10 -g no-leak-app.tsv http://localhost:5001/api/stress > no-leak-app-results.txt
        
        echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
        echo "=== –° –£–¢–ï–ß–ö–û–ô ==="
        tail -20 leak-app-results.txt
        echo "=== –ë–ï–ó –£–¢–ï–ß–ö–ò ==="
        tail -20 no-leak-app-results.txt
        
    - name: üìä Upload —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: |
          *-results.txt
          *.tsv
        retention-days: 7

  # ==========================================
  # JOB 5: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
  # ==========================================
  security-scan:
    name: üîí –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å Safety
      run: |
        pip install safety bandit
        safety check -r requirements.txt --json --output safety-report.json || true
        bandit -r apps/ tests/ -f json -o bandit-report.json || true
        
    - name: üìä Upload —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
        retention-days: 7

  # ==========================================
  # JOB 6: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  # ==========================================
  notify:
    name: üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    runs-on: ubuntu-latest
    if: always()
    needs: [quick-tests, full-tests, allure-report]
    
    steps:
    - name: üì¢ Slack —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#memory-leak-ci'
        text: |
          üîç Memory Leak Detection CI –∑–∞–≤–µ—Ä—à–µ–Ω
          
          üìä –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤:
          ‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã: ${{ needs.quick-tests.result }}
          ‚Ä¢ –ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã: ${{ needs.full-tests.result }}
          ‚Ä¢ Allure –æ—Ç—á–µ—Ç: ${{ needs.allure-report.result }}
          
          üîó –û—Ç—á–µ—Ç: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/
          
          –ö–æ–º–º–∏—Ç: ${{ github.sha }}
          –í–µ—Ç–∫–∞: ${{ github.ref }}
          –ê–≤—Ç–æ—Ä: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      uses: dawidd6/action-send-mail@v3
      if: failure()
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "üî¥ Memory Leak CI Failed: ${{ github.repository }}"
        to: ${{ secrets.EMAIL_TO }}
        from: Memory Leak CI
        body: |
          –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤ Memory Leak Detection CI
          
          –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}
          –í–µ—Ç–∫–∞: ${{ github.ref }}
          –ö–æ–º–º–∏—Ç: ${{ github.sha }}
          –ê–≤—Ç–æ—Ä: ${{ github.actor }}
          
          –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}